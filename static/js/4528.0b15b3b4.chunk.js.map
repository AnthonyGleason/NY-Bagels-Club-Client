{"version":3,"file":"static/js/4528.0b15b3b4.chunk.js","mappings":"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","sources":["Components/Support/Support.tsx","Config/clientSettings.ts","Helpers/auth.ts","Helpers/cart.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './Support.css';\nimport {motion} from 'framer-motion';\nimport Sidebar from '../Sidebar/Sidebar';\nimport { Cart } from '../../Interfaces/interfaces';\nimport { emptyCart, fetchAndHandleCart } from '../../Helpers/cart';\n\nexport default function Support(){\n  const [isContactUsExpanded,setIsContactUsExpanded] = useState<boolean>(true);\n  const [isFaqExpanded,setIsFaqExpanded] = useState<boolean>(true)\n\n  const [isSignedIn,setIsSignedIn] = useState<boolean>(true);\n  const [isSidebarExpanded,setIsSidebarExpanded] = useState<boolean>(false);\n  const [cart,setCart] = useState<Cart>(emptyCart);\n\n  const isInitialLoad = useRef(true);\n  let faqItemsCounter = -1;\n\n  useEffect(()=>{\n    if (isInitialLoad.current){\n      isInitialLoad.current=false;\n      fetchAndHandleCart(setCart);\n    };\n  },[]);\n\n  function createFaqItem(question:string, answer:string) {\n    faqItemsCounter+=1;\n    return (\n      <li key={faqItemsCounter} className='faq-item'>\n        <p className='question'>Q: {question}</p>\n        <p className='answer'>A: {answer}</p>\n      </li>\n    )\n  }\n\n  const faqItems = [\n    createFaqItem(\"What Shipping Carrier Do You Use?\", \"We use USPS (United States Postal Service) for all shipments. Our commitment to reliable and timely delivery ensures that your order reaches you securely. If you have any specific shipping-related concerns, please contact our customer support for personalized assistance.\"),\n    createFaqItem(\"Why Has My Order's Tracking Number Stopped Updating?\", \"During peak holiday seasons, USPS experiences heightened order volumes, leading to occasional delays in tracking updates. If your tracking number hasn't been updated in the past few days, please don't hesitate to contact our support team for further assistance.\"),\n    createFaqItem(\"When Will My Order Ship?\", \"Your order will be shipped on the selected ship date. If you've chosen a holiday, rest assured that we'll process your order on the next available business day. For any urgent shipping requests or queries, feel free to contact our customer support.\"),\n    createFaqItem(\"Are Your Bagels Gluten-Free?\", \"Currently, our bagels are NOT gluten-free.\"),\n    createFaqItem(\"Are Your Bagels Kosher Certified?\", \"Currently, our bagels are NOT Kosher certified.\"),\n    createFaqItem(\"Are Your Bagels Nut-Free?\", \"Our bagels are NOT nut-free. If you have specific dietary requirements or allergen concerns, feel free to reach out to our support team for guidance on alternative options.\"),\n    createFaqItem(\"Why can't I select more than one flavor in a Baker's Dozen?\", \"The ability to select multiple flavors in a Baker's Dozen is an exclusive perk for our club members. Consider subscribing to one of our premium club tiers to unlock this benefit and more! Explore the perks of becoming a club member today.\"),\n    createFaqItem(\"Will my order be fresh?\", \"Absolutely! We are dedicated to delivering fresh gourmet bagels, pastries and spreads. Uniquely, we vacuum-seal all bagels just two hours after baking to ensure maximum freshness. If you ever have concerns about the quality of your order, please contact our support team, and we'll promptly address your needs.\"),\n    createFaqItem(\"Are you a ghost kitchen?\", \"No, we are an established retail business. Brendel's proudly operates three retail locations across Long Island, New York, and primarily ships from our Hauppauge facility.\"),\n    createFaqItem(\"Who is baking the bagels?\", \" Craig Brendel, a hands-on artisan, leads our professional baking staff in ensuring that each bagel meets the highest quality standards. Experience the dedication to craftsmanship that sets our bagels apart.\"),\n    createFaqItem(\"Where do you ship and make your bagels?\", \"Your order is baked, packed, and shipped from physical location in Long Island, New York.\"),\n    createFaqItem(\"Do you offer international shipping?\",\"Presently, we do NOT offer international shipping but we would love to bring the delicious taste of our bagels to customers around the world. We are planning on shipping internationally to Mexico and Canada but do not have any specific launch date to announce at this time.\"),\n    createFaqItem(\"What payment methods do you accept?\",\"We accept a variety of payment methods, including major credit cards, debit cards, and other secure online payment options such as Klarna, Cashapp Pay, Apple Pay, Google Pay and Afterpay.\"),\n    createFaqItem(\"How can I modify or cancel my order?\",\" If you need to make changes to your order or cancel it, please contact our customer support as soon as possible at support@nybagelsclub.com, we'll do our best to accommodate your request, depending on the order processing stage.\"),\n    createFaqItem(\"Can I track my order in real-time?\",\"Yes, you can track your order in real-time using the provided tracking number. If you encounter any issues or if the tracking information is not updating, feel free to reach out to our support team for assistance.\"),\n    createFaqItem(\"Are there any promotions or discounts available?\",\" Stay tuned for our latest promotions and discounts. We regularly offer special deals and exclusive discounts to our valued customers. Don't miss out on the chance to enjoy savings on your favorite bagels!\"),\n  ];\n\n  return(\n    <>\n      <Sidebar\n        cart={cart}\n        isExpanded={isSidebarExpanded} \n        setIsExpanded={setIsSidebarExpanded}\n        isSignedIn={isSignedIn}\n        setIsSignedIn={setIsSignedIn}\n      />\n      <main \n        className='support'\n        onClick={()=>{setIsSidebarExpanded(isSidebarExpanded===true ? false: false)}}\n      >\n        <h3>How May We Assist You?</h3>\n        <section className='faq-section'>\n          <button onClick={()=>{setIsFaqExpanded(!isFaqExpanded)}} className='faq-dropdown-button'>Frequently Asked Questions</button>\n            {\n              isFaqExpanded ?\n              <motion.ul\n                className='faq-wrapper'\n                initial={{ height: 0, opacity: 0 }}\n                animate={{ height: isFaqExpanded ? \"auto\" : 0, opacity: isFaqExpanded ? 1 : 0 }}\n                transition={{ duration: 0.5, ease: \"easeInOut\"  }}\n              >\n                {\n                  faqItems\n                }\n              </motion.ul>\n              :\n              null\n            } \n        </section>\n        <section className='contact-section'>\n          <button onClick={() => setIsContactUsExpanded(!isContactUsExpanded)}>\n            Contact Us\n          </button>\n          {\n            isContactUsExpanded ?\n              <motion.ul\n                initial={{ height: 0, opacity: 0 }}\n                animate={{ height: isContactUsExpanded ? \"auto\" : 0, opacity: isContactUsExpanded ? 1 : 0 }}\n                transition={{ duration: 0.5, ease: \"easeInOut\"  }}\n              >\n                <li>support@nybagelsclub.com</li>\n              </motion.ul>\n            :\n              null\n          }\n        </section>\n      </main>\n    </>\n  );\n};","const USE_LOCALHOST:boolean = false; //FALSE FOR PRODUCTION\n\nexport const IS_MAINTENANCE_MODE:boolean = false;\nexport const HOME_LOADING_DELAY:number= 2000 //in milliseconds\n\nexport const getServerUrlPrefix = function(){\n  if (USE_LOCALHOST){\n    return('http://localhost:5000');\n  }else{\n    return('https://nybc-server-f069d08697f3.herokuapp.com');\n  };\n};\n\nexport const getClientUrlPrefix = function(){\n  if (USE_LOCALHOST){\n    return('http://localhost:3000');\n  }else{\n    return('https://anthonygleason.github.io/NY-Bagels-Club-Client')\n  };\n};\nexport const CHECKOUT_SUCCESS_REDIRECT_URL:string = `${getServerUrlPrefix()}/cart/checkout/success`;","import { getServerUrlPrefix } from \"../Config/clientSettings\";\n\nexport const verifyCartToken = async function(setCart:Function, isClub?:boolean):Promise<boolean>{\n  const cartTokenKey = isClub ? 'clubCartToken' : 'cartToken';\n  try{\n    const response = await fetch(`${getServerUrlPrefix()}/api/shop/carts/verify`,{\n      method: 'GET',\n      headers:{\n        'Content-Type': 'application/json',\n        'Cart-Token': `Bearer ${localStorage.getItem(cartTokenKey)}`,\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n      }\n    });\n    if (response.status!==200) throw new Error('No valid cart detected. Either the user does not have a cart token or the token expired.');\n    const responseData = await response.json();\n    setCart(responseData.cart);\n    return responseData.isValid;\n  }catch(err){\n    console.log(err);\n    return false;\n  };\n};\n\nexport const requestCartToken = async function(isClub:boolean){\n  const response = await fetch(`${getServerUrlPrefix()}/api/shop/carts`,{\n    method: 'POST',\n    headers:{\n      'Content-Type': 'application/json',\n    },\n    body:JSON.stringify({\n      isClub: isClub\n    })\n  });\n  const responseData = await response.json();\n  if (responseData.cartToken){\n    //return the cart session token\n    return responseData.cartToken;  \n  }\n};\n\nexport const verifyLoginToken = async function(\n  setIsSignedIn?:Function,\n  setIsAdmin?:Function,\n  setUserID?:Function\n):Promise<boolean>{\n  let isValid:boolean = false;\n  //handle no login token is present\n  if (!localStorage.getItem('loginToken')){\n    if (setIsSignedIn) setIsSignedIn(false);\n    if (setIsAdmin) setIsAdmin(false);\n    return false;\n  };\n  try{\n    const response = await fetch(`${getServerUrlPrefix()}/api/users/verify`,{\n      method: 'GET',\n      headers:{\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n      }\n    });\n    const responseData = await response.json();\n    //handle 403 unauthorized\n    if (response.ok===false || response.status===403){\n      localStorage.removeItem('loginToken');\n      isValid=false;\n    }else{\n      isValid=responseData.isValid;\n    };\n    if (setIsAdmin && responseData.isAdmin===true) setIsAdmin(true);\n    if (setIsSignedIn) setIsSignedIn(isValid);\n    if (setUserID) setUserID(responseData.userID);\n    return isValid;\n  }catch(err){\n    console.log(err);\n    if (setIsAdmin) setIsAdmin(false);\n    return false;\n  };\n};\n\nexport const handleLogout = async function(setIsSignedIn?:Function){\n  await fetch(`${getServerUrlPrefix()}/api/users/logout`,{\n    method: 'POST',\n    headers:{\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n    }\n  });\n  if (setIsSignedIn) setIsSignedIn(false);\n  //remove the token locally\n  localStorage.removeItem('loginToken');\n};\n\nexport const getMembershipTier = async function(\n    setMembershipTier?:Function,\n    setRemainingDeliveries?:Function,\n    setExpirationDate?:Function\n  ):Promise<string>{\n  try{\n    if (!localStorage.getItem('loginToken')) throw new Error('You are not signed in');\n    const response = await fetch(`${getServerUrlPrefix()}/api/users/membershipLevel`,{\n      method: 'GET',\n      headers:{\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n      }\n    });\n    const responseData = await response.json();\n    if (setMembershipTier) setMembershipTier(responseData.membershipLevel);\n    if (setRemainingDeliveries) setRemainingDeliveries(responseData.remainingDeliveries);\n    if (setExpirationDate) setExpirationDate(new Date(responseData.expirationDate).toDateString());\n    return responseData.membershipLevel;\n  }catch(err){\n    console.log(err+', showing non-member pricing');\n    if (setMembershipTier) setMembershipTier('Non-Member');\n    return 'Non-Member';\n  };\n};","import { getServerUrlPrefix } from \"../Config/clientSettings\";\nimport { BagelItem, Cart, CartItem, SpreadItem } from \"../Interfaces/interfaces\";\nimport { requestCartToken, verifyCartToken } from \"./auth\";\n\nexport const modifyCart = async function(\n  updatedQuantity:number,\n  itemID:string,\n  setCart:Function,\n  isRequestPending:boolean,\n  setIsRequestPending:Function,\n  selection: string,\n  isClub:boolean\n){\n  let cartTokenKey:string = '';\n  //handle not a club request & checking for undefined since isClub is optional\n  if (isClub===false){\n    cartTokenKey = 'cartToken';\n  }else{\n    cartTokenKey = 'clubCartToken';\n  };\n\n  try{\n    //handle request is already pending limited users to 1 request at a time\n    if (isRequestPending) throw new Error('A request is already pending. Please wait for the current request to complete.');\n    //set request to pending\n    setIsRequestPending(true);\n    if (!itemID || updatedQuantity<0) throw new Error('One or more required inputs were left blank.');\n    if(!cartTokenKey) throw new Error('Your request for a local storage cart token was invalid. Did you provide a isClub value to this function?');\n    //make a request to the server to update quantity for cart\n    const response = await fetch(`${getServerUrlPrefix()}/api/shop/carts`,{\n      method: 'PUT',\n      headers:{\n        'Content-Type': 'application/json',\n        'Cart-Token': `Bearer ${localStorage.getItem(cartTokenKey)}`,\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n      },\n      body: JSON.stringify({\n        itemID: itemID,\n        updatedQuantity: updatedQuantity,\n        selection: selection,\n        isClubCart: isClub || undefined\n      })\n    });\n    if (response.status===510){\n      alert('You have reached the maximum allowed quantity for the selected item.');\n    };\n    //if the cart token is invalid request a fresh one and call modifyCart again\n    if (response.status===403){ //BUG WARNING IF 403 IS RETURNED WHEN YOU CANT ADD ANYTHING NEW TO YOUR CLUB CART YOU WILL BE CAUGHT IN AN ENDLESS LOOP OF 403 RESPONSES\n      //request a new cart token\n      localStorage.setItem(cartTokenKey,await requestCartToken(isClub || false));\n      modifyCart(updatedQuantity,itemID,setCart,isRequestPending,setIsRequestPending,selection,isClub);\n    };\n    if (!response.ok) throw new Error('An error occurred in the request to update the cart.');\n    const responseData = await response.json();\n\n    if (responseData.cartToken && responseData.cart){\n      //replace the cartToken in localStorage with the updated cartToken\n      localStorage.setItem(cartTokenKey,responseData.cartToken);\n      //update cart state\n      setCart(responseData.cart);\n    };\n    //allow another request to the server\n    setIsRequestPending(false);\n  }catch(err){\n    setIsRequestPending(false);\n  };\n};\n\nexport const fetchAndHandleCart = async function(setCart:Function,isClub?:boolean){\n  try {\n    const cartTokenKey = isClub ? 'clubCartToken' : 'cartToken';\n    const cartToken: string | null = localStorage.getItem(cartTokenKey);\n    // If a cart token was not found, obtain a fresh one\n    if (!cartToken) {\n      // Request a new cart token\n      localStorage.setItem(cartTokenKey, await requestCartToken(isClub || false));\n    };\n    // If a cart token exists but is invalid\n    if (!await verifyCartToken(setCart,isClub)) { //NOTE THIS VERIFYCART TOKEN IS SETTING A CART\n      localStorage.setItem(cartTokenKey, await requestCartToken(isClub || false));\n      // Because a new cart token was requested, set the cart state back to an empty array\n      setCart([]);\n    };\n  } catch (err) {\n    console.log(err);\n  };  \n};\n\nexport const getUnitPriceFromCartItem = function(storeItem:SpreadItem | BagelItem, selection?:string):number{\n  let price:number = 0;\n  if (storeItem.cat==='bagel' && selection==='two'){\n    const tempStoreItem:BagelItem = storeItem as BagelItem;\n    price = tempStoreItem.twoPrice;\n  }else if (storeItem.cat==='bagel' && selection==='six'){\n    const tempStoreItem:BagelItem = storeItem as BagelItem;\n    price = tempStoreItem.sixPrice;\n  }else if (storeItem.cat==='bagel' && selection==='dozen'){\n    const tempStoreItem:BagelItem = storeItem as BagelItem;\n    price = tempStoreItem.dozenPrice;\n  }else if (storeItem.cat==='spread'){\n    const tempCartItem:SpreadItem = storeItem as SpreadItem;\n    price = tempCartItem.price;\n  };\n  return price;\n};\n\nexport const handleCartItemInputChange = function(\n  e:any,\n  setCartQuantity:Function,\n  cartItem:CartItem,\n  setCart:Function,\n  isRequestPending:boolean,\n  setIsRequestPending:Function,\n  selection: string,\n  isClub:boolean\n){ //accepts an event from an input onChange \n  const newVal: number = parseInt(e.target.value);\n  //we dont want users to accidently delete their cart so lets prevent that\n  if (!newVal) {\n    setCartQuantity('');\n    return ;\n  };\n  modifyCart(\n    newVal,\n    cartItem.itemData._id,\n    setCart,\n    isRequestPending,\n    setIsRequestPending,\n    selection,\n    isClub\n  );\n};\n\nexport const getSelectionName = function(cartItem:CartItem){\n  if (cartItem.itemData.cat==='bagel' && cartItem.selection==='six') return 'Six Pack(s)';\n  if (cartItem.itemData.cat==='bagel' && cartItem.selection==='dozen') return \"Baker's Dozen(s)\";\n  if (cartItem.itemData.cat==='bagel' && cartItem.selection==='two') return 'Two Pack(s)';\n\n  //need to have this first because the current store items without category of spread show \n  if (cartItem.itemData.cat==='spread' && cartItem.selection==='halflb') return '1/2 LB';\n  if (cartItem.itemData.cat==='spread') return 'One Pound';\n  \n  if (cartItem.itemData.cat==='pastry') return 'Six Pack(s)';\n  if (cartItem.itemData.cat==='mystery') return 'Single(s)';\n  return 'N/A';\n};\n\nexport const getCartItemSubtotal = function(cartItem:CartItem):number{\n  return cartItem.quantity * cartItem.unitPriceInDollars;\n};\n\nexport const getItemQuantityFromCart = function(cart:Cart, itemName: string, selection?: string): number {\n  if (!cart || !cart.items) return 0;\n\n  let quantity = 0;\n\n  for (let index = 0; index < cart.items.length; index++) {\n    const cartItem: CartItem = cart.items[index];\n    \n    // Check if the selection and itemName match\n    if (\n      cartItem.selection === selection &&\n      cartItem.itemData.cat === 'bagel' &&\n      cartItem.itemData.name === itemName\n    ) {\n      quantity = cartItem.quantity;\n      break; // Exit the loop if the item is found\n    }else if(\n      cartItem.itemData.cat === 'spread' &&\n      cartItem.itemData.name === itemName\n    ){\n      quantity = cartItem.quantity;\n      break; // Exit the loop if the item is found\n    }else if(\n      cartItem.itemData.cat === 'pastry' &&\n      cartItem.itemData.name === itemName\n    ){\n      quantity = cartItem.quantity;\n      break;\n    }\n  };\n  return quantity;\n};\n\n\nexport const emptyCart = {\n  items: [],\n  subtotalInDollars: 0,\n  taxInDollars: 0,\n  totalQuantity: 0,\n  discountAmountInDollars: 0,\n  finalPriceInDollars: 0,\n  desiredShipDate: new Date(),\n  isGuest: false\n};\n\nexport const requestApplyMembershipPricingToCart = async function(setCart?:Function):Promise<void>{\n  const cartToken:string | null = localStorage.getItem('cartToken');\n  const loginToken:string | null = localStorage.getItem('loginToken');\n\n  if (cartToken){\n    const response = await fetch(`${getServerUrlPrefix()}/api/shop/carts/applyMembershipPricing`,{\n      method: 'POST',\n      headers:{\n        'Content-Type': 'application/json',\n        'Cart-Token': `Bearer ${cartToken}`,\n        'Authorization': `Bearer ${loginToken}`\n      }\n    });\n    if (response.ok){\n      const responseData = await response.json();\n      localStorage.setItem('cartToken',responseData.cartToken);\n      if (setCart) setCart(responseData.cart);\n      console.log('Membership pricing successfully applied!');\n    }else{\n      console.log('User is not a member.');\n    };\n  };\n};\n\nexport const isClubCartValid = function(clubCart:Cart):boolean{\n  let totalSpreadQuantity = 0;\n  let totalBagelQuantity = 0;\n\n  clubCart.items.map((cartItem)=>{\n    switch (cartItem.itemData.cat){\n      case 'bagel':\n        totalBagelQuantity+=cartItem.quantity;\n        break;\n      case 'spread':\n        totalSpreadQuantity+=cartItem.quantity;\n        break;\n      default:\n        break;\n    };\n  });\n  return (totalSpreadQuantity===1 && totalBagelQuantity===6);\n}\n\nexport const handlePlaceClubOrder = async function(clubCart:Cart,isClubCartValid:boolean,deliveriesRemaining:number,shipDate?:Date){\n  if (!isClubCartValid){\n    alert('To place your order you must have 6 \"Two Packs\" and 1 \"1/2 LB\" spread in your cart.')\n  }else if(!shipDate){\n    alert('You must select a ship date to place your order.');\n  }else if(deliveriesRemaining<=0){\n    alert('You do not have any deliveries remaining this billing cycle.');\n  }else{\n    //request the cart token\n    const response = await fetch(`${getServerUrlPrefix()}/api/memberships/create-club-checkout-session`,{\n      method: 'POST',\n      headers:{\n        'Content-Type': `application/json`,\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`,\n        'cart-token': `Bearer ${localStorage.getItem('clubCartToken')}`\n      },\n      body:JSON.stringify({\n        shipDate: shipDate\n      })\n    });\n    const responseData = await response.json();\n    if (responseData.sessionUrl) window.location.href=responseData.sessionUrl;\n  }\n};"],"names":["Support","isContactUsExpanded","setIsContactUsExpanded","useState","isFaqExpanded","setIsFaqExpanded","isSignedIn","setIsSignedIn","isSidebarExpanded","setIsSidebarExpanded","cart","setCart","emptyCart","isInitialLoad","useRef","faqItemsCounter","createFaqItem","question","answer","_jsxs","className","children","useEffect","current","fetchAndHandleCart","faqItems","_Fragment","_jsx","Sidebar","isExpanded","setIsExpanded","onClick","motion","ul","initial","height","opacity","animate","transition","duration","ease","getServerUrlPrefix","getClientUrlPrefix","concat","verifyCartToken","async","isClub","cartTokenKey","response","fetch","method","headers","localStorage","getItem","status","Error","responseData","json","isValid","err","console","log","requestCartToken","body","JSON","stringify","cartToken","verifyLoginToken","setIsAdmin","setUserID","ok","removeItem","isAdmin","userID","handleLogout","getMembershipTier","setMembershipTier","setRemainingDeliveries","setExpirationDate","membershipLevel","remainingDeliveries","Date","expirationDate","toDateString","modifyCart","updatedQuantity","itemID","isRequestPending","setIsRequestPending","selection","isClubCart","undefined","alert","setItem","handleCartItemInputChange","e","setCartQuantity","cartItem","newVal","parseInt","target","value","itemData","_id","getSelectionName","cat","getCartItemSubtotal","quantity","unitPriceInDollars","getItemQuantityFromCart","itemName","items","index","length","name","subtotalInDollars","taxInDollars","totalQuantity","discountAmountInDollars","finalPriceInDollars","desiredShipDate","isGuest","requestApplyMembershipPricingToCart","loginToken","isClubCartValid","clubCart","totalSpreadQuantity","totalBagelQuantity","map","handlePlaceClubOrder","deliveriesRemaining","shipDate","sessionUrl","window","location","href"],"sourceRoot":""}