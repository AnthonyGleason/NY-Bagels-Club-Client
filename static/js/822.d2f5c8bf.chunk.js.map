{"version":3,"file":"static/js/822.d2f5c8bf.chunk.js","mappings":"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","sources":["Assets/icons/bubble-loading-white.svg","Components/Home/HomeLoadingOverlay/HomeLoadingOverlay.tsx","Components/Home/Home.tsx","Config/clientSettings.ts","Helpers/auth.ts","Helpers/cart.tsx"],"sourcesContent":["var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBubbleLoadingWhite(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeDasharray: 60,\n    strokeDashoffset: 60,\n    strokeOpacity: 0.3,\n    d: \"M12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3Z\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    fill: \"freeze\",\n    attributeName: \"stroke-dashoffset\",\n    dur: \"1.3s\",\n    values: \"60;0\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    strokeDasharray: 15,\n    strokeDashoffset: 15,\n    d: \"M12 3C16.9706 3 21 7.02944 21 12\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    fill: \"freeze\",\n    attributeName: \"stroke-dashoffset\",\n    dur: \"0.3s\",\n    values: \"15;0\"\n  }), /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    dur: \"1.5s\",\n    repeatCount: \"indefinite\",\n    type: \"rotate\",\n    values: \"0 12 12;360 12 12\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBubbleLoadingWhite);\nexport default __webpack_public_path__ + \"static/media/bubble-loading-white.146cf9c646c19f35ed199d15ac4e2d75.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useEffect, useState} from 'react';\nimport './HomeLoadingOverlay.css';\nimport bubbleLoadingImg from '../../../Assets/icons/bubble-loading-white.svg';\nimport { HOME_LOADING_DELAY, IS_MAINTENANCE_MODE } from '../../../Config/clientSettings';\nimport {motion} from 'framer-motion';\nimport loadingImg from '../../../Assets/backgrounds/loading.webp';\n\nconst loadingVariants = {\n  hidden: { x: '-100%' },\n  visible: { x:0, transition: { duration: 0.6 } },\n};\n\nconst fadeInVariants = {\n  hidden: {opacity: 0},\n  visible: {opacity: 1, transition: {duration: 0.6}}\n}\n\nexport default function HomeLoadingOverlay(\n  {\n    setIsPageLoaded\n  }:{\n    setIsPageLoaded:Function\n  }\n){\n  const [sitePass,setSitePass] = useState('');\n  \n  useEffect(()=>{\n    if (sitePass === 'devtest')  setIsPageLoaded(true);\n  },[sitePass]);\n\n  useEffect(()=>{\n    //redirect user to new url after time has passed\n    if (!IS_MAINTENANCE_MODE){\n      setTimeout(()=>{\n        setIsPageLoaded(true);\n      },HOME_LOADING_DELAY)\n    }\n  },[setIsPageLoaded]);\n\n  return(\n    <div className='init-load'>\n      <img src={loadingImg} className='init-load-background' sizes='cover'/>\n      <motion.img\n        className='loading-spinner'\n        src={bubbleLoadingImg}\n        alt='This page is currently loading. You will be able to see our delicious bagels and spreads shortly.'\n        initial='hidden'\n        animate='visible'\n        variants={loadingVariants}\n        loading='lazy'\n      />\n      <motion.header initial='hidden' animate='visible' variants={fadeInVariants} className='loading-content-wrapper'>\n        <h3 >\n          New York Bagels Club\n          <br />\n          \"Always Fresh\"\n        </h3>\n        {IS_MAINTENANCE_MODE === true ? (\n          <p className='loading-notice' >\n            We are undergoing scheduled maintenance and will return shortly. Thank you for your patience!\n            <input placeholder='Enter password to enter' onChange={(e)=>{setSitePass(e.target.value)}} />\n          </p>\n        ) : (\n          <p className='loading-message' >\n            <span>Vacuum-Sealed Authentic New York City Style Bagels Directly From the Heart of Long Island to Your Doorstep!</span>\n            <strong className='loading-notice'>\n              No Account or Subscription Required to Order.\n            </strong>\n          </p>         \n        )}\n      </motion.header>\n    </div>\n  )\n};","import React, {Suspense, lazy, useEffect, useRef, useState} from 'react';\n\n//import css\nimport './Home.css';\n\nimport {  Cart} from '../../Interfaces/interfaces';\nimport { emptyCart, fetchAndHandleCart } from '../../Helpers/cart';\nimport HomeLoadingOverlay from './HomeLoadingOverlay/HomeLoadingOverlay';\n\nconst Sidebar = lazy(()=> import('../Sidebar/Sidebar'));\nconst Banner = lazy(()=> import('./Banner/Banner'));\nconst About = lazy(()=> import('./About/About'));\nconst ClubPerks = lazy(()=>import('./ClubPerks/ClubPerks'));\nconst Hero = lazy(()=>import('./Hero/Hero'));\nconst StoreItems = lazy(()=>import('./StoreItems/StoreItems'));\nconst CustomOrders = lazy(()=>import('./CustomOrders/CustomOrders'));\n\nexport default function Home(){\n  const [isSignedIn, setIsSignedIn] = useState<boolean>(false);\n  const [isSidebarExpanded,setIsSidebarExpanded] = useState<boolean>(false);\n  const [cart,setCart] = useState<Cart>(emptyCart);\n  const [isPageLoaded,setIsPageLoaded] = useState<boolean>(false);\n  const isInitialLoad = useRef(true);\n\n  useEffect(()=>{\n    if (isInitialLoad.current) {\n      isInitialLoad.current = false;\n\n      const cartToken:string | null  = localStorage.getItem('cartToken');\n\n      if (cartToken) fetchAndHandleCart(setCart);\n    };\n  },[isInitialLoad]);\n\n  if (!isPageLoaded) return(<HomeLoadingOverlay setIsPageLoaded={setIsPageLoaded} />);\n\n  return(\n    <main\n      className='home'\n    >\n      <Sidebar \n        cart={cart}\n        isExpanded={isSidebarExpanded} \n        setIsExpanded={setIsSidebarExpanded}\n        isSignedIn={isSignedIn}\n        setIsSignedIn={setIsSignedIn}\n      />\n      <div className='home-content-wrapper' onClick={()=>{setIsSidebarExpanded(isSidebarExpanded===true ? false: false)}}>\n        <Hero />\n        <Banner />\n        {/* <About /> */}\n        {/* <Menu \n          bagelItems = {bagelItems}\n          pastryItems = {pastryItems} \n        /> */}\n        <StoreItems \n          isSignedIn={isSignedIn}\n          cart={cart}\n          setCart={setCart}\n        />\n        <CustomOrders />\n        <ClubPerks />\n      </div>\n    </main>\n  )\n};","const USE_LOCALHOST:boolean = false; //FALSE FOR PRODUCTION\n\nexport const IS_MAINTENANCE_MODE:boolean = false;\nexport const HOME_LOADING_DELAY:number= 1800 //in milliseconds\n\nexport const getServerUrlPrefix = function(){\n  if (USE_LOCALHOST){\n    return('http://localhost:5000');\n  }else{\n    return('https://nybagelsclub-7eb3cdcd8d53.herokuapp.com');\n  };\n};\n\nexport const getClientUrlPrefix = function(){\n  if (USE_LOCALHOST){\n    return('http://localhost:3000');\n  }else{\n    return('https://anthonygleason.github.io/NY-Bagels-Club-Client')\n  };\n};\nexport const CHECKOUT_SUCCESS_REDIRECT_URL:string = `${getServerUrlPrefix()}/cart/checkout/success`;","import { getServerUrlPrefix } from \"../Config/clientSettings\";\n\nexport const verifyCartToken = async function(setCart:Function, isClub?:boolean):Promise<boolean>{\n  const cartTokenKey = isClub ? 'clubCartToken' : 'cartToken';\n  try{\n    const response = await fetch(`${getServerUrlPrefix()}/api/shop/carts/verify`,{\n      method: 'GET',\n      headers:{\n        'Content-Type': 'application/json',\n        'Cart-Token': `Bearer ${localStorage.getItem(cartTokenKey)}`,\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n      }\n    });\n    if (response.status!==200) throw new Error('No valid cart detected. Either the user does not have a cart token or the token expired.');\n    const responseData = await response.json();\n    setCart(responseData.cart);\n    return responseData.isValid;\n  }catch(err){\n    console.log(err);\n    return false;\n  };\n};\n\nexport const requestCartToken = async function(isClub:boolean){\n  const response = await fetch(`${getServerUrlPrefix()}/api/shop/carts`,{\n    method: 'POST',\n    headers:{\n      'Content-Type': 'application/json',\n    },\n    body:JSON.stringify({\n      isClub: isClub\n    })\n  });\n  const responseData = await response.json();\n  if (responseData.cartToken){\n    //return the cart session token\n    return responseData.cartToken;  \n  }\n};\n\nexport const verifyLoginToken = async function(\n  setIsSignedIn?:Function,\n  setIsAdmin?:Function,\n  setUserID?:Function\n):Promise<boolean>{\n  let isValid:boolean = false;\n  //handle no login token is present\n  if (!localStorage.getItem('loginToken')){\n    if (setIsSignedIn) setIsSignedIn(false);\n    if (setIsAdmin) setIsAdmin(false);\n    return false;\n  };\n  try{\n    const response = await fetch(`${getServerUrlPrefix()}/api/users/verify`,{\n      method: 'GET',\n      headers:{\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n      }\n    });\n    const responseData = await response.json();\n    //handle 403 unauthorized\n    if (response.ok===false || response.status===403){\n      localStorage.removeItem('loginToken');\n      isValid=false;\n    }else{\n      isValid=responseData.isValid;\n    };\n    if (setIsAdmin && responseData.isAdmin===true) setIsAdmin(true);\n    if (setIsSignedIn) setIsSignedIn(isValid);\n    if (setUserID) setUserID(responseData.userID);\n    return isValid;\n  }catch(err){\n    console.log(err);\n    if (setIsAdmin) setIsAdmin(false);\n    return false;\n  };\n};\n\nexport const handleLogout = async function(setIsSignedIn?:Function){\n  await fetch(`${getServerUrlPrefix()}/api/users/logout`,{\n    method: 'POST',\n    headers:{\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n    }\n  });\n  if (setIsSignedIn) setIsSignedIn(false);\n  //remove the token locally\n  localStorage.removeItem('loginToken');\n};\n\nexport const getMembershipTier = async function(\n    setMembershipTier?:Function,\n    setRemainingDeliveries?:Function,\n    setExpirationDate?:Function\n  ):Promise<string>{\n  try{\n    if (!localStorage.getItem('loginToken')) throw new Error('You are not signed in');\n    const response = await fetch(`${getServerUrlPrefix()}/api/users/membershipLevel`,{\n      method: 'GET',\n      headers:{\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n      }\n    });\n    const responseData = await response.json();\n    if (setMembershipTier) setMembershipTier(responseData.membershipLevel);\n    if (setRemainingDeliveries) setRemainingDeliveries(responseData.remainingDeliveries);\n    if (setExpirationDate) setExpirationDate(new Date(responseData.expirationDate).toDateString());\n    return responseData.membershipLevel;\n  }catch(err){\n    console.log('You are not signed in, showing non-member pricing.');\n    if (setMembershipTier) setMembershipTier('Non-Member');\n    return 'Non-Member';\n  };\n};","import { getServerUrlPrefix } from \"../Config/clientSettings\";\nimport { BagelItem, Cart, CartItem, SpreadItem } from \"../Interfaces/interfaces\";\nimport { requestCartToken, verifyCartToken } from \"./auth\";\n\nexport const modifyCart = async function(\n  updatedQuantity:number,\n  itemID:string,\n  setCart:Function,\n  isRequestPending:boolean,\n  setIsRequestPending:Function,\n  selection: string,\n  isClub:boolean\n){\n  let cartTokenKey:string = '';\n  //handle not a club request & checking for undefined since isClub is optional\n  if (isClub===false){\n    cartTokenKey = 'cartToken';\n  }else{\n    cartTokenKey = 'clubCartToken';\n  };\n\n  try{\n    //handle request is already pending limited users to 1 request at a time\n    if (isRequestPending) throw new Error('A request is already pending. Please wait for the current request to complete.');\n    //set request to pending\n    setIsRequestPending(true);\n    if (!itemID || updatedQuantity<0) throw new Error('One or more required inputs were left blank.');\n    if(!cartTokenKey) throw new Error('Your request for a local storage cart token was invalid. Did you provide a isClub value to this function?');\n    //make a request to the server to update quantity for cart\n    const response = await fetch(`${getServerUrlPrefix()}/api/shop/carts`,{\n      method: 'PUT',\n      headers:{\n        'Content-Type': 'application/json',\n        'Cart-Token': `Bearer ${localStorage.getItem(cartTokenKey)}`,\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n      },\n      body: JSON.stringify({\n        itemID: itemID,\n        updatedQuantity: updatedQuantity,\n        selection: selection,\n        isClubCart: isClub || undefined\n      })\n    });\n    if (response.status===510){\n      alert('You have reached the maximum allowed quantity for the selected item.');\n    };\n    //if the cart token is invalid request a fresh one and call modifyCart again\n    if (response.status===403){ //BUG WARNING IF 403 IS RETURNED WHEN YOU CANT ADD ANYTHING NEW TO YOUR CLUB CART YOU WILL BE CAUGHT IN AN ENDLESS LOOP OF 403 RESPONSES\n      //request a new cart token\n      localStorage.setItem(cartTokenKey,await requestCartToken(isClub || false));\n      modifyCart(updatedQuantity,itemID,setCart,isRequestPending,setIsRequestPending,selection,isClub);\n    };\n    if (!response.ok) throw new Error('An error occurred in the request to update the cart.');\n    const responseData = await response.json();\n\n    if (responseData.cartToken && responseData.cart){\n      //replace the cartToken in localStorage with the updated cartToken\n      localStorage.setItem(cartTokenKey,responseData.cartToken);\n      //update cart state\n      setCart(responseData.cart);\n    };\n    //allow another request to the server\n    setIsRequestPending(false);\n  }catch(err){\n    setIsRequestPending(false);\n  };\n};\n\nexport const fetchAndHandleCart = async function(setCart:Function,isClub?:boolean){\n  try {\n    const cartTokenKey = isClub ? 'clubCartToken' : 'cartToken';\n    const cartToken: string | null = localStorage.getItem(cartTokenKey);\n    // If a cart token was not found, obtain a fresh one\n    if (!cartToken) {\n      // Request a new cart token\n      localStorage.setItem(cartTokenKey, await requestCartToken(isClub || false));\n    };\n    // If a cart token exists but is invalid\n    if (!await verifyCartToken(setCart,isClub)) { //NOTE THIS VERIFYCART TOKEN IS SETTING A CART\n      localStorage.setItem(cartTokenKey, await requestCartToken(isClub || false));\n      // Because a new cart token was requested, set the cart state back to an empty array\n      setCart([]);\n    };\n  } catch (err) {\n    console.log(err);\n  };  \n};\n\nexport const getUnitPriceFromCartItem = function(storeItem:SpreadItem | BagelItem, selection?:string):number{\n  let price:number = 0;\n  if (storeItem.cat==='bagel' && selection==='two'){\n    const tempStoreItem:BagelItem = storeItem as BagelItem;\n    price = tempStoreItem.twoPrice;\n  }else if (storeItem.cat==='bagel' && selection==='six'){\n    const tempStoreItem:BagelItem = storeItem as BagelItem;\n    price = tempStoreItem.sixPrice;\n  }else if (storeItem.cat==='bagel' && selection==='dozen'){\n    const tempStoreItem:BagelItem = storeItem as BagelItem;\n    price = tempStoreItem.dozenPrice;\n  }else if (storeItem.cat==='spread'){\n    const tempCartItem:SpreadItem = storeItem as SpreadItem;\n    price = tempCartItem.price;\n  };\n  return price;\n};\n\nexport const handleCartItemInputChange = function(\n  e:any,\n  setCartQuantity:Function,\n  cartItem:CartItem,\n  setCart:Function,\n  isRequestPending:boolean,\n  setIsRequestPending:Function,\n  selection: string,\n  isClub:boolean\n){ //accepts an event from an input onChange \n  const newVal: number = parseInt(e.target.value);\n  //we dont want users to accidently delete their cart so lets prevent that\n  if (!newVal) {\n    setCartQuantity('');\n    return ;\n  };\n  modifyCart(\n    newVal,\n    cartItem.itemData._id,\n    setCart,\n    isRequestPending,\n    setIsRequestPending,\n    selection,\n    isClub\n  );\n};\n\nexport const getSelectionName = function(cartItem:CartItem){\n  if (cartItem.itemData.cat==='bagel' && cartItem.selection==='six') return 'Six Pack(s)';\n  if (cartItem.itemData.cat==='bagel' && cartItem.selection==='dozen') return \"Baker's Dozen(s)\";\n  if (cartItem.itemData.cat==='bagel' && cartItem.selection==='two') return 'Two Pack(s)';\n\n  //need to have this first because the current store items without category of spread show \n  if (cartItem.itemData.cat==='spread' && cartItem.selection==='halflb') return '1/2 LB';\n  if (cartItem.itemData.cat==='spread') return 'One Pound';\n  \n  if (cartItem.itemData.cat==='pastry') return 'Six Pack(s)';\n  if (cartItem.itemData.cat==='mystery') return 'Single(s)';\n  return 'N/A';\n};\n\nexport const getCartItemSubtotal = function(cartItem:CartItem):number{\n  return cartItem.quantity * cartItem.unitPriceInDollars;\n};\n\nexport const getItemQuantityFromCart = function(cart:Cart, itemName: string, selection?: string): number {\n  if (!cart || !cart.items) return 0;\n\n  let quantity = 0;\n\n  for (let index = 0; index < cart.items.length; index++) {\n    const cartItem: CartItem = cart.items[index];\n    \n    // Check if the selection and itemName match\n    if (\n      cartItem.selection === selection &&\n      cartItem.itemData.cat === 'bagel' &&\n      cartItem.itemData.name === itemName\n    ) {\n      quantity = cartItem.quantity;\n      break; // Exit the loop if the item is found\n    }else if(\n      cartItem.itemData.cat === 'spread' &&\n      cartItem.itemData.name === itemName\n    ){\n      quantity = cartItem.quantity;\n      break; // Exit the loop if the item is found\n    }else if(\n      cartItem.itemData.cat === 'pastry' &&\n      cartItem.itemData.name === itemName\n    ){\n      quantity = cartItem.quantity;\n      break;\n    }\n  };\n  return quantity;\n};\n\n\nexport const emptyCart = {\n  items: [],\n  subtotalInDollars: 0,\n  taxInDollars: 0,\n  totalQuantity: 0,\n  discountAmountInDollars: 0,\n  finalPriceInDollars: 0,\n  desiredShipDate: new Date(),\n  isGuest: false\n};\n\nexport const requestApplyMembershipPricingToCart = async function(setCart?:Function):Promise<void>{\n  const cartToken:string | null = localStorage.getItem('cartToken');\n  const loginToken:string | null = localStorage.getItem('loginToken');\n\n  if (cartToken){\n    const response = await fetch(`${getServerUrlPrefix()}/api/shop/carts/applyMembershipPricing`,{\n      method: 'POST',\n      headers:{\n        'Content-Type': 'application/json',\n        'Cart-Token': `Bearer ${cartToken}`,\n        'Authorization': `Bearer ${loginToken}`\n      }\n    });\n    if (response.ok){\n      const responseData = await response.json();\n      localStorage.setItem('cartToken',responseData.cartToken);\n      if (setCart) setCart(responseData.cart);\n      console.log('Membership pricing successfully applied!');\n    }else{\n      console.log('User is not a member.');\n    };\n  };\n};\n\nexport const isClubCartValid = function(clubCart:Cart):boolean{\n  let totalSpreadQuantity = 0;\n  let totalBagelQuantity = 0;\n\n  clubCart.items.map((cartItem)=>{\n    switch (cartItem.itemData.cat){\n      case 'bagel':\n        totalBagelQuantity+=cartItem.quantity;\n        break;\n      case 'spread':\n        totalSpreadQuantity+=cartItem.quantity;\n        break;\n      default:\n        break;\n    };\n  });\n  return (totalSpreadQuantity===1 && totalBagelQuantity===6);\n}\n\nexport const handlePlaceClubOrder = async function(clubCart:Cart,isClubCartValid:boolean,deliveriesRemaining:number,shipDate?:Date){\n  if (!isClubCartValid){\n    alert('To place your order you must have 6 \"Two Packs\" and 1 \"1/2 LB\" spread in your cart.')\n  }else if(!shipDate){\n    alert('You must select a ship date to place your order.');\n  }else if(deliveriesRemaining<=0){\n    alert('You do not have any deliveries remaining this billing cycle.');\n  }else{\n    //request the cart token\n    const response = await fetch(`${getServerUrlPrefix()}/api/memberships/create-club-checkout-session`,{\n      method: 'POST',\n      headers:{\n        'Content-Type': `application/json`,\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`,\n        'cart-token': `Bearer ${localStorage.getItem('clubCartToken')}`\n      },\n      body:JSON.stringify({\n        shipDate: shipDate\n      })\n    });\n    const responseData = await response.json();\n    if (responseData.sessionUrl) window.location.href=responseData.sessionUrl;\n  }\n};"],"names":["loadingVariants","hidden","x","visible","transition","duration","fadeInVariants","opacity","HomeLoadingOverlay","_ref","setIsPageLoaded","sitePass","setSitePass","useState","useEffect","IS_MAINTENANCE_MODE","setTimeout","HOME_LOADING_DELAY","_jsxs","className","children","_jsx","src","loadingImg","sizes","motion","img","bubbleLoadingImg","alt","initial","animate","variants","loading","header","placeholder","onChange","e","target","value","Sidebar","lazy","Banner","ClubPerks","Hero","StoreItems","CustomOrders","Home","isSignedIn","setIsSignedIn","isSidebarExpanded","setIsSidebarExpanded","cart","setCart","emptyCart","isPageLoaded","isInitialLoad","useRef","current","localStorage","getItem","fetchAndHandleCart","isExpanded","setIsExpanded","onClick","getServerUrlPrefix","getClientUrlPrefix","concat","verifyCartToken","async","isClub","cartTokenKey","response","fetch","method","headers","status","Error","responseData","json","isValid","err","console","log","requestCartToken","body","JSON","stringify","cartToken","verifyLoginToken","setIsAdmin","setUserID","ok","removeItem","isAdmin","userID","handleLogout","getMembershipTier","setMembershipTier","setRemainingDeliveries","setExpirationDate","membershipLevel","remainingDeliveries","Date","expirationDate","toDateString","modifyCart","updatedQuantity","itemID","isRequestPending","setIsRequestPending","selection","isClubCart","undefined","alert","setItem","handleCartItemInputChange","setCartQuantity","cartItem","newVal","parseInt","itemData","_id","getSelectionName","cat","getCartItemSubtotal","quantity","unitPriceInDollars","getItemQuantityFromCart","itemName","items","index","length","name","subtotalInDollars","taxInDollars","totalQuantity","discountAmountInDollars","finalPriceInDollars","desiredShipDate","isGuest","requestApplyMembershipPricingToCart","loginToken","isClubCartValid","clubCart","totalSpreadQuantity","totalBagelQuantity","map","handlePlaceClubOrder","deliveriesRemaining","shipDate","sessionUrl","window","location","href"],"sourceRoot":""}