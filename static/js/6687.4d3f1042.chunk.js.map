{"version":3,"file":"static/js/6687.4d3f1042.chunk.js","mappings":"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","sources":["Components/Accounts/SubscriptionPage/SubscriptionPage.tsx","Config/clientSettings.ts","Helpers/auth.ts","Helpers/cart.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './SubscriptionPage.css';\nimport { useNavigate } from 'react-router-dom';\nimport { verifyLoginToken } from '../../../Helpers/auth';\nimport Sidebar from '../../Sidebar/Sidebar';\nimport { emptyCart, fetchAndHandleCart } from '../../../Helpers/cart';\nimport { Cart } from '../../../Interfaces/interfaces';\nimport { getServerUrlPrefix } from '../../../Config/clientSettings';\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      'stripe-pricing-table': React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n    }\n  }\n};\n\nexport default function SubscriptionPage(){\n  const navigate = useNavigate();\n  const [isLoginValid,setIsLoginValid] = useState<boolean>(false);\n  const [userID,setUserID] = useState<string>(''); \n\n  const verifyAccessToPage = async function(){\n    setIsLoginValid(await verifyLoginToken(undefined,undefined,setUserID));\n  };\n  \n  useEffect(() => {\n\n    // Create a script element\n    const script = document.createElement('script');\n\n    // Set the source attribute to the URL of the external script\n    script.src = 'https://js.stripe.com/v3/pricing-table.js';\n\n    // Append the script element to the document's head\n    document.head.appendChild(script);\n    \n    // Cleanup function to remove the script when the component unmounts\n    return () => {\n      document.head.removeChild(script);\n    };\n  }, []); // Empty dependency array ensures this effect runs once when the component mounts\n  \n  const [isSidebarExpanded,setIsSidebarExpanded] = useState<boolean>(false);\n  const [cart,setCart] = useState<Cart>(emptyCart);\n  const [pricingTableID,setPricingTableID] = useState<string>('');\n  const [publishableKey,setPublishableKey] = useState<string>('');\n\n  const fetchPricingTableKeys = async function(setPublishableKey:Function,setPricingTableID:Function){\n    const response = await fetch(`${getServerUrlPrefix()}/api/memberships/pricingTableKeys`,{\n      method: 'GET'\n    });\n    const responseData = await response.json();\n    setPublishableKey(responseData.publishableKey);\n    setPricingTableID(responseData.pricingTableID);\n  };\n\n  const isInitialLoad = useRef(true);\n\n  useEffect(()=>{\n    if (isInitialLoad.current===true){\n      isInitialLoad.current=false;\n      fetchAndHandleCart(setCart);\n      //get pricing table info\n      fetchPricingTableKeys(setPublishableKey,setPricingTableID);\n    };\n  },[]);\n  \n  useEffect(()=>{\n    //verify access to page\n    verifyAccessToPage();\n  },[]);\n\n  if (isLoginValid && userID && userID.length!==0 && userID!=='undefined'){\n    return(\n      <>\n        <Sidebar \n          cart={cart}\n          isExpanded={isSidebarExpanded} \n          setIsExpanded={setIsSidebarExpanded}\n          isSignedIn={isLoginValid}\n          setIsSignedIn={setIsLoginValid}\n        />\n        {\n          publishableKey && pricingTableID\n            ?\n            <section className='pricing-table' onClick={()=>{setIsSidebarExpanded(isSidebarExpanded===true ? false: false)}}>\n            <script async src=\"https://js.stripe.com/v3/pricing-table.js\"></script>\n            <stripe-pricing-table \n              pricing-table-id={pricingTableID}\n              publishable-key={publishableKey}\n              client-reference-id={userID}\n            />\n          </section>\n          :\n          null\n\n        }\n      </>\n    )\n  }else{\n    return(\n      <>\n        <Sidebar \n          cart={cart}\n          isExpanded={isSidebarExpanded} \n          setIsExpanded={setIsSidebarExpanded}\n          isSignedIn={isLoginValid}\n          setIsSignedIn={setIsLoginValid}\n        />\n        <div className='checkout-logged-out'>\n          <h3>Please login or register to join the club.</h3>\n          <div className='checkout-button-wrapper'>\n            <button onClick={()=>{navigate('/login')}}>Login</button>\n            <button onClick={()=>{navigate('/register')}}>Register</button>\n          </div>\n        </div>\n      </>\n    );\n  };\n};","const USE_LOCALHOST:boolean = false; //FALSE FOR PRODUCTION\n\nexport const IS_MAINTENANCE_MODE:boolean = false;\nexport const HOME_LOADING_DELAY:number= 2250 //in milliseconds\n\nexport const getServerUrlPrefix = function(){\n  if (USE_LOCALHOST){\n    return('http://localhost:5000');\n  }else{\n    return('https://nybagelsclub-7eb3cdcd8d53.herokuapp.com');\n  };\n};\n\nexport const getClientUrlPrefix = function(){\n  if (USE_LOCALHOST){\n    return('http://localhost:3000');\n  }else{\n    return('https://anthonygleason.github.io/NY-Bagels-Club-Client')\n  };\n};\nexport const CHECKOUT_SUCCESS_REDIRECT_URL:string = `${getServerUrlPrefix()}/cart/checkout/success`;","import { getServerUrlPrefix } from \"../Config/clientSettings\";\n\nexport const verifyCartToken = async function(setCart:Function, isClub?:boolean):Promise<boolean>{\n  const cartTokenKey = isClub ? 'clubCartToken' : 'cartToken';\n  try{\n    const response = await fetch(`${getServerUrlPrefix()}/api/shop/carts/verify`,{\n      method: 'GET',\n      headers:{\n        'Content-Type': 'application/json',\n        'Cart-Token': `Bearer ${localStorage.getItem(cartTokenKey)}`,\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n      }\n    });\n    if (response.status!==200) throw new Error('No valid cart detected. Either the user does not have a cart token or the token expired.');\n    const responseData = await response.json();\n    setCart(responseData.cart);\n    return responseData.isValid;\n  }catch(err){\n    console.log(err);\n    return false;\n  };\n};\n\nexport const requestCartToken = async function(isClub:boolean){\n  const response = await fetch(`${getServerUrlPrefix()}/api/shop/carts`,{\n    method: 'POST',\n    headers:{\n      'Content-Type': 'application/json',\n    },\n    body:JSON.stringify({\n      isClub: isClub\n    })\n  });\n  const responseData = await response.json();\n  if (responseData.cartToken){\n    //return the cart session token\n    return responseData.cartToken;  \n  }\n};\n\nexport const verifyLoginToken = async function(\n  setIsSignedIn?:Function,\n  setIsAdmin?:Function,\n  setUserID?:Function\n):Promise<boolean>{\n  let isValid:boolean = false;\n  //handle no login token is present\n  if (!localStorage.getItem('loginToken')){\n    if (setIsSignedIn) setIsSignedIn(false);\n    if (setIsAdmin) setIsAdmin(false);\n    return false;\n  };\n  try{\n    const response = await fetch(`${getServerUrlPrefix()}/api/users/verify`,{\n      method: 'GET',\n      headers:{\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n      }\n    });\n    const responseData = await response.json();\n    //handle 403 unauthorized\n    if (response.ok===false || response.status===403){\n      localStorage.removeItem('loginToken');\n      isValid=false;\n    }else{\n      isValid=responseData.isValid;\n    };\n    if (setIsAdmin && responseData.isAdmin===true) setIsAdmin(true);\n    if (setIsSignedIn) setIsSignedIn(isValid);\n    if (setUserID) setUserID(responseData.userID);\n    return isValid;\n  }catch(err){\n    console.log(err);\n    if (setIsAdmin) setIsAdmin(false);\n    return false;\n  };\n};\n\nexport const handleLogout = async function(setIsSignedIn?:Function){\n  await fetch(`${getServerUrlPrefix()}/api/users/logout`,{\n    method: 'POST',\n    headers:{\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n    }\n  });\n  if (setIsSignedIn) setIsSignedIn(false);\n  //remove the token locally\n  localStorage.removeItem('loginToken');\n};\n\nexport const getMembershipTier = async function(\n    setMembershipTier?:Function,\n    setRemainingDeliveries?:Function,\n    setExpirationDate?:Function\n  ):Promise<string>{\n  try{\n    if (!localStorage.getItem('loginToken')) throw new Error('You are not signed in');\n    const response = await fetch(`${getServerUrlPrefix()}/api/users/membershipLevel`,{\n      method: 'GET',\n      headers:{\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n      }\n    });\n    const responseData = await response.json();\n    if (setMembershipTier) setMembershipTier(responseData.membershipLevel);\n    if (setRemainingDeliveries) setRemainingDeliveries(responseData.remainingDeliveries);\n    if (setExpirationDate) setExpirationDate(new Date(responseData.expirationDate).toDateString());\n    return responseData.membershipLevel;\n  }catch(err){\n    console.log('You are not signed in, showing non-member pricing.');\n    if (setMembershipTier) setMembershipTier('Non-Member');\n    return 'Non-Member';\n  };\n};","import { getServerUrlPrefix } from \"../Config/clientSettings\";\nimport { BagelItem, Cart, CartItem, SpreadItem } from \"../Interfaces/interfaces\";\nimport { requestCartToken, verifyCartToken } from \"./auth\";\n\nexport const modifyCart = async function(\n  updatedQuantity:number,\n  itemID:string,\n  setCart:Function,\n  isRequestPending:boolean,\n  setIsRequestPending:Function,\n  selection: string,\n  isClub:boolean\n){\n  let cartTokenKey:string = '';\n  //handle not a club request & checking for undefined since isClub is optional\n  if (isClub===false){\n    cartTokenKey = 'cartToken';\n  }else{\n    cartTokenKey = 'clubCartToken';\n  };\n\n  try{\n    //handle request is already pending limited users to 1 request at a time\n    if (isRequestPending) throw new Error('A request is already pending. Please wait for the current request to complete.');\n    //set request to pending\n    setIsRequestPending(true);\n    if (!itemID || updatedQuantity<0) throw new Error('One or more required inputs were left blank.');\n    if(!cartTokenKey) throw new Error('Your request for a local storage cart token was invalid. Did you provide a isClub value to this function?');\n    //make a request to the server to update quantity for cart\n    const response = await fetch(`${getServerUrlPrefix()}/api/shop/carts`,{\n      method: 'PUT',\n      headers:{\n        'Content-Type': 'application/json',\n        'Cart-Token': `Bearer ${localStorage.getItem(cartTokenKey)}`,\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n      },\n      body: JSON.stringify({\n        itemID: itemID,\n        updatedQuantity: updatedQuantity,\n        selection: selection,\n        isClubCart: isClub || undefined\n      })\n    });\n    if (response.status===510){\n      alert('You have reached the maximum allowed quantity for the selected item.');\n    };\n    //if the cart token is invalid request a fresh one and call modifyCart again\n    if (response.status===403){ //BUG WARNING IF 403 IS RETURNED WHEN YOU CANT ADD ANYTHING NEW TO YOUR CLUB CART YOU WILL BE CAUGHT IN AN ENDLESS LOOP OF 403 RESPONSES\n      //request a new cart token\n      localStorage.setItem(cartTokenKey,await requestCartToken(isClub || false));\n      modifyCart(updatedQuantity,itemID,setCart,isRequestPending,setIsRequestPending,selection,isClub);\n    };\n    if (!response.ok) throw new Error('An error occurred in the request to update the cart.');\n    const responseData = await response.json();\n\n    if (responseData.cartToken && responseData.cart){\n      //replace the cartToken in localStorage with the updated cartToken\n      localStorage.setItem(cartTokenKey,responseData.cartToken);\n      //update cart state\n      setCart(responseData.cart);\n    };\n    //allow another request to the server\n    setIsRequestPending(false);\n  }catch(err){\n    setIsRequestPending(false);\n  };\n};\n\nexport const fetchAndHandleCart = async function(setCart:Function,isClub?:boolean){\n  try {\n    const cartTokenKey = isClub ? 'clubCartToken' : 'cartToken';\n    const cartToken: string | null = localStorage.getItem(cartTokenKey);\n    // If a cart token was not found, obtain a fresh one\n    if (!cartToken) {\n      // Request a new cart token\n      localStorage.setItem(cartTokenKey, await requestCartToken(isClub || false));\n    };\n    // If a cart token exists but is invalid\n    if (!await verifyCartToken(setCart,isClub)) { //NOTE THIS VERIFYCART TOKEN IS SETTING A CART\n      localStorage.setItem(cartTokenKey, await requestCartToken(isClub || false));\n      // Because a new cart token was requested, set the cart state back to an empty array\n      setCart([]);\n    };\n  } catch (err) {\n    console.log(err);\n  };  \n};\n\nexport const getUnitPriceFromCartItem = function(storeItem:SpreadItem | BagelItem, selection?:string):number{\n  let price:number = 0;\n  if (storeItem.cat==='bagel' && selection==='two'){\n    const tempStoreItem:BagelItem = storeItem as BagelItem;\n    price = tempStoreItem.twoPrice;\n  }else if (storeItem.cat==='bagel' && selection==='six'){\n    const tempStoreItem:BagelItem = storeItem as BagelItem;\n    price = tempStoreItem.sixPrice;\n  }else if (storeItem.cat==='bagel' && selection==='dozen'){\n    const tempStoreItem:BagelItem = storeItem as BagelItem;\n    price = tempStoreItem.dozenPrice;\n  }else if (storeItem.cat==='spread'){\n    const tempCartItem:SpreadItem = storeItem as SpreadItem;\n    price = tempCartItem.price;\n  };\n  return price;\n};\n\nexport const handleCartItemInputChange = function(\n  e:any,\n  setCartQuantity:Function,\n  cartItem:CartItem,\n  setCart:Function,\n  isRequestPending:boolean,\n  setIsRequestPending:Function,\n  selection: string,\n  isClub:boolean\n){ //accepts an event from an input onChange \n  const newVal: number = parseInt(e.target.value);\n  //we dont want users to accidently delete their cart so lets prevent that\n  if (!newVal) {\n    setCartQuantity('');\n    return ;\n  };\n  modifyCart(\n    newVal,\n    cartItem.itemData._id,\n    setCart,\n    isRequestPending,\n    setIsRequestPending,\n    selection,\n    isClub\n  );\n};\n\nexport const getSelectionName = function(cartItem:CartItem){\n  if (cartItem.itemData.cat==='bagel' && cartItem.selection==='six') return 'Six Pack(s)';\n  if (cartItem.itemData.cat==='bagel' && cartItem.selection==='dozen') return \"Baker's Dozen(s)\";\n  if (cartItem.itemData.cat==='bagel' && cartItem.selection==='two') return 'Two Pack(s)';\n\n  //need to have this first because the current store items without category of spread show \n  if (cartItem.itemData.cat==='spread' && cartItem.selection==='halflb') return '1/2 LB';\n  if (cartItem.itemData.cat==='spread') return 'One Pound';\n  \n  if (cartItem.itemData.cat==='pastry') return 'Six Pack(s)';\n  if (cartItem.itemData.cat==='mystery') return 'Single(s)';\n  return 'N/A';\n};\n\nexport const getCartItemSubtotal = function(cartItem:CartItem):number{\n  return cartItem.quantity * cartItem.unitPriceInDollars;\n};\n\nexport const getItemQuantityFromCart = function(cart:Cart, itemName: string, selection?: string): number {\n  if (!cart || !cart.items) return 0;\n\n  let quantity = 0;\n\n  for (let index = 0; index < cart.items.length; index++) {\n    const cartItem: CartItem = cart.items[index];\n    \n    // Check if the selection and itemName match\n    if (\n      cartItem.selection === selection &&\n      cartItem.itemData.cat === 'bagel' &&\n      cartItem.itemData.name === itemName\n    ) {\n      quantity = cartItem.quantity;\n      break; // Exit the loop if the item is found\n    }else if(\n      cartItem.itemData.cat === 'spread' &&\n      cartItem.itemData.name === itemName\n    ){\n      quantity = cartItem.quantity;\n      break; // Exit the loop if the item is found\n    }else if(\n      cartItem.itemData.cat === 'pastry' &&\n      cartItem.itemData.name === itemName\n    ){\n      quantity = cartItem.quantity;\n      break;\n    }\n  };\n  return quantity;\n};\n\n\nexport const emptyCart = {\n  items: [],\n  subtotalInDollars: 0,\n  taxInDollars: 0,\n  totalQuantity: 0,\n  discountAmountInDollars: 0,\n  finalPriceInDollars: 0,\n  desiredShipDate: new Date(),\n  isGuest: false\n};\n\nexport const requestApplyMembershipPricingToCart = async function(setCart?:Function):Promise<void>{\n  const cartToken:string | null = localStorage.getItem('cartToken');\n  const loginToken:string | null = localStorage.getItem('loginToken');\n\n  if (cartToken){\n    const response = await fetch(`${getServerUrlPrefix()}/api/shop/carts/applyMembershipPricing`,{\n      method: 'POST',\n      headers:{\n        'Content-Type': 'application/json',\n        'Cart-Token': `Bearer ${cartToken}`,\n        'Authorization': `Bearer ${loginToken}`\n      }\n    });\n    if (response.ok){\n      const responseData = await response.json();\n      localStorage.setItem('cartToken',responseData.cartToken);\n      if (setCart) setCart(responseData.cart);\n      console.log('Membership pricing successfully applied!');\n    }else{\n      console.log('User is not a member.');\n    };\n  };\n};\n\nexport const isClubCartValid = function(clubCart:Cart):boolean{\n  let totalSpreadQuantity = 0;\n  let totalBagelQuantity = 0;\n\n  clubCart.items.map((cartItem)=>{\n    switch (cartItem.itemData.cat){\n      case 'bagel':\n        totalBagelQuantity+=cartItem.quantity;\n        break;\n      case 'spread':\n        totalSpreadQuantity+=cartItem.quantity;\n        break;\n      default:\n        break;\n    };\n  });\n  return (totalSpreadQuantity===1 && totalBagelQuantity===6);\n}\n\nexport const handlePlaceClubOrder = async function(clubCart:Cart,isClubCartValid:boolean,deliveriesRemaining:number,shipDate?:Date){\n  if (!isClubCartValid){\n    alert('To place your order you must have 6 \"Two Packs\" and 1 \"1/2 LB\" spread in your cart.')\n  }else if(!shipDate){\n    alert('You must select a ship date to place your order.');\n  }else if(deliveriesRemaining<=0){\n    alert('You do not have any deliveries remaining this billing cycle.');\n  }else{\n    //request the cart token\n    const response = await fetch(`${getServerUrlPrefix()}/api/memberships/create-club-checkout-session`,{\n      method: 'POST',\n      headers:{\n        'Content-Type': `application/json`,\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`,\n        'cart-token': `Bearer ${localStorage.getItem('clubCartToken')}`\n      },\n      body:JSON.stringify({\n        shipDate: shipDate\n      })\n    });\n    const responseData = await response.json();\n    if (responseData.sessionUrl) window.location.href=responseData.sessionUrl;\n  }\n};"],"names":["SubscriptionPage","navigate","useNavigate","isLoginValid","setIsLoginValid","useState","userID","setUserID","useEffect","script","document","createElement","src","head","appendChild","removeChild","isSidebarExpanded","setIsSidebarExpanded","cart","setCart","emptyCart","pricingTableID","setPricingTableID","publishableKey","setPublishableKey","isInitialLoad","useRef","current","fetchAndHandleCart","async","response","fetch","concat","getServerUrlPrefix","method","responseData","json","fetchPricingTableKeys","verifyLoginToken","undefined","verifyAccessToPage","length","_jsxs","_Fragment","children","_jsx","Sidebar","isExpanded","setIsExpanded","isSignedIn","setIsSignedIn","className","onClick","IS_MAINTENANCE_MODE","HOME_LOADING_DELAY","getClientUrlPrefix","verifyCartToken","isClub","cartTokenKey","headers","localStorage","getItem","status","Error","isValid","err","console","log","requestCartToken","body","JSON","stringify","cartToken","setIsAdmin","ok","removeItem","isAdmin","handleLogout","getMembershipTier","setMembershipTier","setRemainingDeliveries","setExpirationDate","membershipLevel","remainingDeliveries","Date","expirationDate","toDateString","modifyCart","updatedQuantity","itemID","isRequestPending","setIsRequestPending","selection","isClubCart","alert","setItem","handleCartItemInputChange","e","setCartQuantity","cartItem","newVal","parseInt","target","value","itemData","_id","getSelectionName","cat","getCartItemSubtotal","quantity","unitPriceInDollars","getItemQuantityFromCart","itemName","items","index","name","subtotalInDollars","taxInDollars","totalQuantity","discountAmountInDollars","finalPriceInDollars","desiredShipDate","isGuest","requestApplyMembershipPricingToCart","loginToken","isClubCartValid","clubCart","totalSpreadQuantity","totalBagelQuantity","map","handlePlaceClubOrder","deliveriesRemaining","shipDate","sessionUrl","window","location","href"],"sourceRoot":""}