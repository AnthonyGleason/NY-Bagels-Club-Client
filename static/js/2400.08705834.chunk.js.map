{"version":3,"file":"static/js/2400.08705834.chunk.js","mappings":"+MAMe,SAASA,IACtB,MAAOC,EAAYC,IAAkBC,EAAAA,EAAAA,WAAkB,IAChDC,EAAWC,IAAiBF,EAAAA,EAAAA,UAAiB,KAC7CG,EAAaC,IAAmBJ,EAAAA,EAAAA,UAAiB,KACjDK,EAAcC,IAAoBN,EAAAA,EAAAA,UAAiB,KACnDO,EAAQC,IAAcR,EAAAA,EAAAA,UAAiB,KACvCS,EAAeC,IAAqBV,EAAAA,EAAAA,WAAkB,GAmC7D,OAAKF,GAgDDa,EAAAA,EAAAA,KAAA,WACEC,UAAU,gBAAeC,UAEzBF,EAAAA,EAAAA,KAACG,EAAAA,EAAOC,EAAC,CACPC,QAAS,CAAEC,QAAS,GACpBC,YAAa,CAAED,QAAS,GACxBE,WAAY,CAACC,SAAU,KACvBC,SAAU,CAACC,MAAM,GACjBV,UAAU,2BAA0BC,SACrC,8IAvDHU,EAAAA,EAAAA,MAACT,EAAAA,EAAOU,QAAO,CACbZ,UAAU,gBACVI,QAAS,CAAEC,QAAS,GACpBC,YAAa,CAAED,QAAS,GACxBE,WAAY,CAACC,SAAU,GACvBC,SAAU,CAACC,MAAM,GAAOT,SAAA,EAExBF,EAAAA,EAAAA,KAAA,MACEc,GAAG,uBACHb,UAAU,sBAAqBC,SAChC,qCAGDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,EACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,qBAAoBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUC,SAAC,qBAAuB,iNAEtDU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,+CAA8CC,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,SAAOe,QAAQ,uBAAsBb,SAAC,yDACtCF,EAAAA,EAAAA,KAAA,SAAOc,GAAG,uBAAuBE,KAAK,uBAAuBf,UAAU,WAAWgB,KAAK,WAAWC,QAASpB,EAAgBqB,SAAUA,KAAKpB,GAAmBD,EAAe,QAE9Kc,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOe,QAAQ,eAAcb,SAAC,oBAC9BF,EAAAA,EAAAA,KAAA,SAAOc,GAAG,eAAeE,KAAK,eAAef,UAAU,WAAWmB,YAAY,sBAAsBC,MAAO/B,EAAY6B,SAAWG,IAAK/B,EAAc+B,EAAEC,OAAOF,MAAM,EAAGJ,KAAK,cAE9KL,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOe,QAAQ,kBAAiBb,SAAC,uBACjCF,EAAAA,EAAAA,KAAA,SAAOc,GAAG,kBAAkBE,KAAK,kBAAkBf,UAAU,WAAWmB,YAAY,iCAAiCC,MAAO3B,EAAeyB,SAAWG,IAAK3B,EAAiB2B,EAAEC,OAAOF,MAAM,QAE7LT,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOe,QAAQ,cAAab,SAAC,mBAC7BF,EAAAA,EAAAA,KAAA,YAAUc,GAAG,cAAcE,KAAK,cAAcf,UAAU,WAAWoB,MAAO7B,EAAc2B,SAAWG,IAAK7B,EAAgB6B,EAAEC,OAAOF,MAAM,EAAGD,YAAY,8OAExJpB,EAAAA,EAAAA,KAAA,KAAAE,SAAG,uEAEDN,GACEI,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iBAAgBC,SAAEN,IAE/B,MAEJI,EAAAA,EAAAA,KAAA,UAAQwB,QAASA,MA3EWC,eAAerC,GAEjD,IACE,IAAKE,EAAY,MAAM,IAAIoC,MAAM,mEACjC,KAAKC,EAAAA,EAAAA,GAAarC,GAAa,MAAM,IAAIoC,MAAM,4CAC/C,IAAKhC,EAAe,MAAM,IAAIgC,MAAM,gFACpC,IAAKlC,EAAc,MAAM,IAAIkC,MAAM,uEAkBnC,GAfA7B,EAAW,YAGY+B,MAAM,GAADC,QAAIC,EAAAA,EAAAA,MAAoB,2BAA0B,CAC5EC,OAAQ,OACRC,QAAQ,CACN,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB7C,WAAYA,EACZE,aAAcA,EACdE,cAAeA,EACf0C,oBAAqBtC,OAGXuC,GAAI,MAAM,IAAIX,MAAM,6EAClCtC,GAAe,EACjB,CAAC,MAAMkD,GAGL,YAFAzC,EAAWyC,EAAI1C,QAGjB,CACF,CA4C8B2C,CAA4BnD,EAAe,EAAG6B,KAAK,SAAShB,UAAU,6BAA4BC,SAAC,2BAqBnI,C,kCC7GO,MAAMyB,EAAgBa,GAEb,4CACDC,KAAKD,E","sources":["Components/Home/CustomOrders/CustomOrders.tsx","Helpers/verification.ts"],"sourcesContent":["import React, { useState } from 'react';\nimport './CustomOrders.css';\nimport { isValidEmail } from '../../../Helpers/verification';\nimport { getServerUrlPrefix } from '../../../Config/clientSettings';\nimport {motion} from 'framer-motion';\n\nexport default function CustomOrders(){\n  const [isEmailSent,setIsEmailSent] = useState<boolean>(false);\n  const [emailInput,setEmailInput] = useState<string>('');\n  const [requestInput,setRequestInput] = useState<string>('');\n  const [quantityInput,setQuantityInput] = useState<string>('');\n  const [message,setMessage] = useState<string>('');\n  const [isOfferChecked,setIsOfferChecked] = useState<boolean>(false);\n\n  const handleCustomOrderFormSubmit = async function(setIsEmailSent:Function){\n    //verify inputs\n    try{\n      if (!emailInput) throw new Error('The email input cannot be left empty when submitting this form.');\n      if (!isValidEmail(emailInput)) throw new Error('The email provided is not a valid email!');\n      if (!quantityInput) throw new Error('You cannot leave the desired quantity input blank when submitting this form.');\n      if (!requestInput) throw new Error('You cannot leave the request input blank when submitting this form.')\n      \n      //clear the message because the inputs are valid.\n      setMessage('');\n\n      //send information to the server\n      const response = await fetch(`${getServerUrlPrefix()}/api/shop/orders/custom`,{\n        method: 'POST',\n        headers:{\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          emailInput: emailInput,\n          requestInput: requestInput,\n          quantityInput: quantityInput,\n          requestsPackageDeal: isOfferChecked\n        })\n      });\n      if (!response.ok) throw new Error('There was an error sending an email to our staff. Please try again later.')\n      setIsEmailSent(true);\n    }catch(err:any){\n      setMessage(err.message);\n      //break a fatal error has occured and we cannot proceed\n      return\n    };\n  };\n\n  if (!isEmailSent){\n    return(\n      <motion.section\n        className='custom-orders'\n        initial={{ opacity: 0 }}\n        whileInView={{ opacity: 1 }}\n        transition={{duration: 1}}\n        viewport={{once: false}}\n      >\n        <h2 \n          id='custom-orders-header' \n          className='store-items-heading'\n        >\n          Create Your Dream Gourmet Bagel\n        </h2>\n        <form>\n          <div className='custom-orders-info'>\n              <span className='brendels'>Brendel's Bagels</span> and New York Bagels Club have partnered to create a package deal for custom themed bagel styles. The package is $274.95 and comes with four custom baker's dozen's and three 1 lb spreads of your choice.\n          </div>\n          <div className='input-wrapper custom-orders-checkbox-wrapper'>\n            <label htmlFor='specialOfferCheckbox'>Are you interested in our special offer? (Optional)</label>\n            <input id='specialOfferCheckbox' name='specialOfferCheckbox' className='checkbox' type='checkbox' checked={isOfferChecked} onChange={()=>{setIsOfferChecked(!isOfferChecked)}}/>\n          </div>\n          <div className='input-wrapper'>\n            <label htmlFor='contactEmail'>Contact Email:</label>\n            <input id='contactEmail' name='contactEmail' className='text-box' placeholder='example@example.com' value={emailInput} onChange={(e)=>{setEmailInput(e.target.value)}} type='email' />\n          </div>\n          <div className='input-wrapper'>\n            <label htmlFor='desiredQuantity'>Desired Quantity:</label>\n            <input id='desiredQuantity' name='desiredQuantity' className='text-box' placeholder=\"Four Delicious Baker's Dozen's\" value={quantityInput} onChange={(e)=>{setQuantityInput(e.target.value)}} />\n          </div>\n          <div className='input-wrapper'>\n            <label htmlFor='userRequest'>Your Request:</label>\n            <textarea id='userRequest' name='userRequest' className='text-box' value={requestInput} onChange={(e)=>{setRequestInput(e.target.value)}} placeholder=\"Hint: You can personalize our Bagels to suit your event's theme, whether it's a baby shower, wedding, sports team, school, holiday, or bachelorette / bachelor party. Mix and match from our flavor options and pick your own colors!\" />\n          </div>\n          <p>Our staff will review and respond to your request within 24 hours.</p>\n          {\n            message ?\n              <p className='error-messages'>{message}</p>\n            :\n              null\n          }\n          <button onClick={()=>{handleCustomOrderFormSubmit(setIsEmailSent)}} type='button' className='custom-order-submit-button'>Send Us An Email!</button>\n        </form>\n      </motion.section>\n    );\n  }else{\n    return(\n      <section\n        className='custom-orders'\n      >\n        <motion.p\n          initial={{ opacity: 0 }}\n          whileInView={{ opacity: 1 }}\n          transition={{duration: 3.5}}\n          viewport={{once: false}}  \n          className='custom-orders-email-sent'\n        >\n          We have received your message and will get back to you within 24 hours. Thank you for being a part of the New York Bagels Club Family.\n        </motion.p>\n      </section>\n    );\n  };\n};"," // Custom email validation function\nexport const isValidEmail = (email:string):boolean => {\n  // You can use a regular expression to validate the email format\n  const regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n  return regex.test(email);\n};"],"names":["CustomOrders","isEmailSent","setIsEmailSent","useState","emailInput","setEmailInput","requestInput","setRequestInput","quantityInput","setQuantityInput","message","setMessage","isOfferChecked","setIsOfferChecked","_jsx","className","children","motion","p","initial","opacity","whileInView","transition","duration","viewport","once","_jsxs","section","id","htmlFor","name","type","checked","onChange","placeholder","value","e","target","onClick","async","Error","isValidEmail","fetch","concat","getServerUrlPrefix","method","headers","body","JSON","stringify","requestsPackageDeal","ok","err","handleCustomOrderFormSubmit","email","test"],"sourceRoot":""}