{"version":3,"file":"static/js/8310.6c43d46c.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let canSkipHandoff = true;\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed) {\n                    canSkipHandoff = false;\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.syncStart = true;\n                }\n            }\n        }\n        let canSkip = canSkipHandoff && !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.15\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.15 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.15\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["instantAnimationState","isBezierDefinition","easing","Array","isArray","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","every","cubicBezierAsString","_ref","a","b","c","d","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","i","Math","abs","binarySubdivide","isEasingArray","reverseEasing","backInOut","mirrorEasing","easingLookup","circInOut","anticipate","p","pow","easingDefinitionToFunction","definition","invariant","length","x1","y1","x2","y2","undefined","hueToRgb","q","mixLinearColor","from","to","v","fromExpo","sqrt","max","colorTypes","hex","rgba","hsla","asRGBA","color","type","find","test","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mix","transform","mixImmediate","origin","target","getMixer","startsWith","mixComplex","mixArray","output","numValues","blendValue","fromThis","mixObject","key","template","complex","createTransformer","originStats","analyseComplexValue","targetStats","numVars","numColors","numNumbers","pipe","values","warning","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","push","interpolate","input","clamp","isClamp","arguments","inputLength","reverse","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","min","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","state","done","value","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","next","velocitySampleDuration","calcGeneratorVelocity","resolveValue","current","prevT","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","velocity","mass","secondsToMilliseconds","dampingRatio","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","isProcessing","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","callback","memo","Object","hasOwnProperty","call","Element","prototype","acceleratedValues","Set","createAcceleratedAnimation","valueName","has","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","animation","element","keyframeOptions","animate","fill","iterations","direction","animateStyle","owner","syncStart","document","timeline","cancelAnimation","safeCancel","onfinish","set","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","isAnimatable","isNone","isZeroValueString","animateMotionValue","transition","valueTransition","getValueTransition","isTargetAnimatable","defaultOrigin","get","animatableTemplateValue","noneKeyframeIndexes","getAnimatableNone","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","getProps","acceleratedAnimation","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","visualElement","transitionOverride","transitionEnd","makeTargetAnimatable","willChange","getValue","animations","animationTypeState","animationState","getState","valueTarget","canSkipHandoff","window","HandoffAppearAnimations","hasAnimated","appearId","optimizedAppearDataAttribute","canSkip","shouldReduceMotion","isWillChangeMotionValue","add","remove","all","setTarget","animateVariant","variant","resolved","resolveVariant","custom","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","forEach","child","notify","animateChildren","when","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","camelToDash","isKeyframesTarget","_delay","acos","Queue","constructor","this","order","scheduled","process","index","indexOf","delete","clear","stepsOrder","schedule","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","LazyContext","strict","isRefObject","ref","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","props","name","isVariantNode","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","wantsHandoff","HandoffComplete","useIsomorphicLayoutEffect","render","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","translateAlias","y","z","transformPerspective","numTransforms","transformPropOrder","getValueAsType","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","numberValueTypes","valueAsType","default","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","trim","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","source","isMotionValue","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","width","pxOriginY","height","calcSVGTransformOrigin","scale","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolveVariantFromProps","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","prev","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","contextWindow","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","parseFloat","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","subscriptionManager","_len","args","_key","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","rotateZ","resetValues","setStaticValue","_b","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","token","fallback","match","exec","parseCSSVariable","getPropertyValue","trimmed","isNumericalString","isCSSVariableToken","positionalKeys","isPositionalKey","isNumOrPxType","number","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","filter","positionalValues","_ref3","paddingLeft","paddingRight","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","fromType","findDimensionValueType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","addValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","getOrigin","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","str","replace","checkStringStartsWith","cssVariableRegex","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","testValueType","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateZ","perspective","progressPercentage","zIndex","fillOpacity","strokeOpacity","numOctaves","getCurrent","currentValues","valueTypes","findValueType","setMotionValue","resolveFinalValueInKeyframes","setVariants","variantLabels","setValues","newValueKeys","numNewValues","targetValue","getOriginFromTransition","transitionOrigin","item","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","getSize","seconds","milliseconds","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","_this","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","r","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","cssVarTokeniser","regex","countKey","colorTokeniser","colorRegex","numberTokeniser","tokenise","tokenised","originalValue","toString","parseComplexValue","convertNumbersToZero","transformer","createUnitType","endsWith"],"sourceRoot":""}