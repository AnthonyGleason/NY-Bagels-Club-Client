{"version":3,"file":"static/js/8809.00b8948c.chunk.js","mappings":"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","sources":["Components/Home/Home.tsx","Config/clientSettings.ts","Helpers/auth.ts","Helpers/cart.tsx"],"sourcesContent":["import React, {Suspense, lazy, useEffect, useRef, useState} from 'react';\n\n//import css\nimport './Home.css';\n\nimport {  Cart} from '../../Interfaces/interfaces';\nimport { emptyCart, fetchAndHandleCart } from '../../Helpers/cart';\n\nconst Sidebar = lazy(()=> import('../Sidebar/Sidebar'));\nconst Banner = lazy(()=> import('./Banner/Banner'));\nconst About = lazy(()=> import('./About/About'));\nconst ClubPerks = lazy(()=>import('./ClubPerks/ClubPerks'));\nconst Hero = lazy(()=>import('./Hero/Hero'));\nconst StoreItems = lazy(()=>import('./StoreItems/StoreItems'));\nconst CustomOrders = lazy(()=>import('./CustomOrders/CustomOrders'));\n\nexport default function Home(){\n  const [isSignedIn, setIsSignedIn] = useState<boolean>(false);\n  const [isSidebarExpanded,setIsSidebarExpanded] = useState<boolean>(false);\n  const [cart,setCart] = useState<Cart>(emptyCart);\n\n  const isInitialLoad = useRef(true);\n\n  useEffect(()=>{\n    if (isInitialLoad.current) {\n      isInitialLoad.current = false;\n\n      const cartToken:string | null  = localStorage.getItem('cartToken');\n\n      if (cartToken) fetchAndHandleCart(setCart);\n    };\n  },[isInitialLoad]);\n\n  return(\n    <main\n      className='home'\n    >\n      <Sidebar \n        cart={cart}\n        isExpanded={isSidebarExpanded} \n        setIsExpanded={setIsSidebarExpanded}\n        isSignedIn={isSignedIn}\n        setIsSignedIn={setIsSignedIn}\n      />\n      <div className='home-content-wrapper' onClick={()=>{setIsSidebarExpanded(isSidebarExpanded===true ? false: false)}}>\n        <Hero />\n        <Banner />\n        <About />\n        {/* <Menu \n          bagelItems = {bagelItems}\n          pastryItems = {pastryItems} \n        /> */}\n        <StoreItems \n          isSignedIn={isSignedIn}\n          cart={cart}\n          setCart={setCart}\n        />\n        <CustomOrders />\n        <ClubPerks />\n      </div>\n    </main>\n  )\n};","const USE_LOCALHOST:boolean = false; //FALSE FOR PRODUCTION\n\nexport const IS_MAINTENANCE_MODE:boolean = false;\nexport const HOME_LOADING_DELAY:number= 2000 //in milliseconds\n\nexport const getServerUrlPrefix = function(){\n  if (USE_LOCALHOST){\n    return('http://localhost:5000');\n  }else{\n    return('https://brendels-webstore-f2339d5fa5b2.herokuapp.com');\n  };\n};\n\nexport const getClientUrlPrefix = function(){\n  if (USE_LOCALHOST){\n    return('http://localhost:3000');\n  }else{\n    return('https://nybagelsclub.com')\n  };\n};\nexport const CHECKOUT_SUCCESS_REDIRECT_URL:string = `${getServerUrlPrefix()}/cart/checkout/success`;","import { getServerUrlPrefix } from \"../Config/clientSettings\";\n\nexport const verifyCartToken = async function(setCart:Function, isClub?:boolean):Promise<boolean>{\n  const cartTokenKey = isClub ? 'clubCartToken' : 'cartToken';\n  try{\n    const response = await fetch(`${getServerUrlPrefix()}/api/shop/carts/verify`,{\n      method: 'GET',\n      headers:{\n        'Content-Type': 'application/json',\n        'Cart-Token': `Bearer ${localStorage.getItem(cartTokenKey)}`,\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n      }\n    });\n    if (response.status!==200) throw new Error('No valid cart detected. Either the user does not have a cart token or the token expired.');\n    const responseData = await response.json();\n    setCart(responseData.cart);\n    return responseData.isValid;\n  }catch(err){\n    console.log(err);\n    return false;\n  };\n};\n\nexport const requestCartToken = async function(isClub:boolean){\n  const response = await fetch(`${getServerUrlPrefix()}/api/shop/carts`,{\n    method: 'POST',\n    headers:{\n      'Content-Type': 'application/json',\n    },\n    body:JSON.stringify({\n      isClub: isClub\n    })\n  });\n  const responseData = await response.json();\n  if (responseData.cartToken){\n    //return the cart session token\n    return responseData.cartToken;  \n  }\n};\n\nexport const verifyLoginToken = async function(\n  setIsSignedIn?:Function,\n  setIsAdmin?:Function,\n  setUserID?:Function\n):Promise<boolean>{\n  let isValid:boolean = false;\n  //handle no login token is present\n  if (!localStorage.getItem('loginToken')){\n    if (setIsSignedIn) setIsSignedIn(false);\n    if (setIsAdmin) setIsAdmin(false);\n    return false;\n  };\n  try{\n    const response = await fetch(`${getServerUrlPrefix()}/api/users/verify`,{\n      method: 'GET',\n      headers:{\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n      }\n    });\n    const responseData = await response.json();\n    //handle 403 unauthorized\n    if (response.ok===false || response.status===403){\n      localStorage.removeItem('loginToken');\n      isValid=false;\n    }else{\n      isValid=responseData.isValid;\n    };\n    if (setIsAdmin && responseData.isAdmin===true) setIsAdmin(true);\n    if (setIsSignedIn) setIsSignedIn(isValid);\n    if (setUserID) setUserID(responseData.userID);\n    return isValid;\n  }catch(err){\n    console.log(err);\n    if (setIsAdmin) setIsAdmin(false);\n    return false;\n  };\n};\n\nexport const handleLogout = async function(setIsSignedIn?:Function){\n  await fetch(`${getServerUrlPrefix()}/api/users/logout`,{\n    method: 'POST',\n    headers:{\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n    }\n  });\n  if (setIsSignedIn) setIsSignedIn(false);\n  //remove the token locally\n  localStorage.removeItem('loginToken');\n};\n\nexport const getMembershipTier = async function(\n    setMembershipTier?:Function,\n    setRemainingDeliveries?:Function,\n    setExpirationDate?:Function\n  ):Promise<string>{\n  try{\n    if (!localStorage.getItem('loginToken')) throw new Error('You are not signed in');\n    const response = await fetch(`${getServerUrlPrefix()}/api/users/membershipLevel`,{\n      method: 'GET',\n      headers:{\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n      }\n    });\n    const responseData = await response.json();\n    if (setMembershipTier) setMembershipTier(responseData.membershipLevel);\n    if (setRemainingDeliveries) setRemainingDeliveries(responseData.remainingDeliveries);\n    if (setExpirationDate) setExpirationDate(new Date(responseData.expirationDate).toDateString());\n    return responseData.membershipLevel;\n  }catch(err){\n    console.log(err+', showing non-member pricing');\n    if (setMembershipTier) setMembershipTier('Non-Member');\n    return 'Non-Member';\n  };\n};","import { getServerUrlPrefix } from \"../Config/clientSettings\";\nimport { BagelItem, Cart, CartItem, SpreadItem } from \"../Interfaces/interfaces\";\nimport { requestCartToken, verifyCartToken } from \"./auth\";\n\nexport const modifyCart = async function(\n  updatedQuantity:number,\n  itemID:string,\n  setCart:Function,\n  isRequestPending:boolean,\n  setIsRequestPending:Function,\n  selection: string,\n  isClub:boolean\n){\n  let cartTokenKey:string = '';\n  //handle not a club request & checking for undefined since isClub is optional\n  if (isClub===false){\n    cartTokenKey = 'cartToken';\n  }else{\n    cartTokenKey = 'clubCartToken';\n  };\n\n  try{\n    //handle request is already pending limited users to 1 request at a time\n    if (isRequestPending) throw new Error('A request is already pending. Please wait for the current request to complete.');\n    //set request to pending\n    setIsRequestPending(true);\n    if (!itemID || updatedQuantity<0) throw new Error('One or more required inputs were left blank.');\n    if(!cartTokenKey) throw new Error('Your request for a local storage cart token was invalid. Did you provide a isClub value to this function?');\n    //make a request to the server to update quantity for cart\n    const response = await fetch(`${getServerUrlPrefix()}/api/shop/carts`,{\n      method: 'PUT',\n      headers:{\n        'Content-Type': 'application/json',\n        'Cart-Token': `Bearer ${localStorage.getItem(cartTokenKey)}`,\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`\n      },\n      body: JSON.stringify({\n        itemID: itemID,\n        updatedQuantity: updatedQuantity,\n        selection: selection,\n        isClubCart: isClub || undefined\n      })\n    });\n    if (response.status===510){\n      alert('You have reached the maximum allowed quantity for the selected item.');\n    };\n    //if the cart token is invalid request a fresh one and call modifyCart again\n    if (response.status===403){ //BUG WARNING IF 403 IS RETURNED WHEN YOU CANT ADD ANYTHING NEW TO YOUR CLUB CART YOU WILL BE CAUGHT IN AN ENDLESS LOOP OF 403 RESPONSES\n      //request a new cart token\n      localStorage.setItem(cartTokenKey,await requestCartToken(isClub || false));\n      modifyCart(updatedQuantity,itemID,setCart,isRequestPending,setIsRequestPending,selection,isClub);\n    };\n    if (!response.ok) throw new Error('An error occurred in the request to update the cart.');\n    const responseData = await response.json();\n\n    if (responseData.cartToken && responseData.cart){\n      //replace the cartToken in localStorage with the updated cartToken\n      localStorage.setItem(cartTokenKey,responseData.cartToken);\n      //update cart state\n      setCart(responseData.cart);\n    };\n    //allow another request to the server\n    setIsRequestPending(false);\n  }catch(err){\n    setIsRequestPending(false);\n  };\n};\n\nexport const fetchAndHandleCart = async function(setCart:Function,isClub?:boolean){\n  try {\n    const cartTokenKey = isClub ? 'clubCartToken' : 'cartToken';\n    const cartToken: string | null = localStorage.getItem(cartTokenKey);\n    // If a cart token was not found, obtain a fresh one\n    if (!cartToken) {\n      // Request a new cart token\n      localStorage.setItem(cartTokenKey, await requestCartToken(isClub || false));\n    };\n    // If a cart token exists but is invalid\n    if (!await verifyCartToken(setCart,isClub)) { //NOTE THIS VERIFYCART TOKEN IS SETTING A CART\n      localStorage.setItem(cartTokenKey, await requestCartToken(isClub || false));\n      // Because a new cart token was requested, set the cart state back to an empty array\n      setCart([]);\n    };\n  } catch (err) {\n    console.log(err);\n  };  \n};\n\nexport const getUnitPriceFromCartItem = function(storeItem:SpreadItem | BagelItem, selection?:string):number{\n  let price:number = 0;\n  if (storeItem.cat==='bagel' && selection==='two'){\n    const tempStoreItem:BagelItem = storeItem as BagelItem;\n    price = tempStoreItem.twoPrice;\n  }else if (storeItem.cat==='bagel' && selection==='six'){\n    const tempStoreItem:BagelItem = storeItem as BagelItem;\n    price = tempStoreItem.sixPrice;\n  }else if (storeItem.cat==='bagel' && selection==='dozen'){\n    const tempStoreItem:BagelItem = storeItem as BagelItem;\n    price = tempStoreItem.dozenPrice;\n  }else if (storeItem.cat==='spread'){\n    const tempCartItem:SpreadItem = storeItem as SpreadItem;\n    price = tempCartItem.price;\n  };\n  return price;\n};\n\nexport const handleCartItemInputChange = function(\n  e:any,\n  setCartQuantity:Function,\n  cartItem:CartItem,\n  setCart:Function,\n  isRequestPending:boolean,\n  setIsRequestPending:Function,\n  selection: string,\n  isClub:boolean\n){ //accepts an event from an input onChange \n  const newVal: number = parseInt(e.target.value);\n  //we dont want users to accidently delete their cart so lets prevent that\n  if (!newVal) {\n    setCartQuantity('');\n    return ;\n  };\n  modifyCart(\n    newVal,\n    cartItem.itemData._id,\n    setCart,\n    isRequestPending,\n    setIsRequestPending,\n    selection,\n    isClub\n  );\n};\n\nexport const getSelectionName = function(cartItem:CartItem){\n  if (cartItem.itemData.cat==='bagel' && cartItem.selection==='six') return 'Six Pack(s)';\n  if (cartItem.itemData.cat==='bagel' && cartItem.selection==='dozen') return \"Baker's Dozen(s)\";\n  if (cartItem.itemData.cat==='bagel' && cartItem.selection==='two') return 'Two Pack(s)';\n\n  //need to have this first because the current store items without category of spread show \n  if (cartItem.itemData.cat==='spread' && cartItem.selection==='halflb') return '1/2 LB';\n  if (cartItem.itemData.cat==='spread') return 'One Pound';\n  \n  if (cartItem.itemData.cat==='pastry') return 'Six Pack(s)';\n  if (cartItem.itemData.cat==='mystery') return 'Single(s)';\n  return 'N/A';\n};\n\nexport const getCartItemSubtotal = function(cartItem:CartItem):number{\n  return cartItem.quantity * cartItem.unitPriceInDollars;\n};\n\nexport const getItemQuantityFromCart = function(cart:Cart, itemName: string, selection?: string): number {\n  if (!cart || !cart.items) return 0;\n\n  let quantity = 0;\n\n  for (let index = 0; index < cart.items.length; index++) {\n    const cartItem: CartItem = cart.items[index];\n    \n    // Check if the selection and itemName match\n    if (\n      cartItem.selection === selection &&\n      cartItem.itemData.cat === 'bagel' &&\n      cartItem.itemData.name === itemName\n    ) {\n      quantity = cartItem.quantity;\n      break; // Exit the loop if the item is found\n    }else if(\n      cartItem.itemData.cat === 'spread' &&\n      cartItem.itemData.name === itemName\n    ){\n      quantity = cartItem.quantity;\n      break; // Exit the loop if the item is found\n    }else if(\n      cartItem.itemData.cat === 'pastry' &&\n      cartItem.itemData.name === itemName\n    ){\n      quantity = cartItem.quantity;\n      break;\n    }\n  };\n  return quantity;\n};\n\n\nexport const emptyCart = {\n  items: [],\n  subtotalInDollars: 0,\n  taxInDollars: 0,\n  totalQuantity: 0,\n  discountAmountInDollars: 0,\n  finalPriceInDollars: 0,\n  desiredShipDate: new Date(),\n  isGuest: false\n};\n\nexport const requestApplyMembershipPricingToCart = async function(setCart?:Function):Promise<void>{\n  const cartToken:string | null = localStorage.getItem('cartToken');\n  const loginToken:string | null = localStorage.getItem('loginToken');\n\n  if (cartToken){\n    const response = await fetch(`${getServerUrlPrefix()}/api/shop/carts/applyMembershipPricing`,{\n      method: 'POST',\n      headers:{\n        'Content-Type': 'application/json',\n        'Cart-Token': `Bearer ${cartToken}`,\n        'Authorization': `Bearer ${loginToken}`\n      }\n    });\n    if (response.ok){\n      const responseData = await response.json();\n      localStorage.setItem('cartToken',responseData.cartToken);\n      if (setCart) setCart(responseData.cart);\n      console.log('Membership pricing successfully applied!');\n    }else{\n      console.log('User is not a member.');\n    };\n  };\n};\n\nexport const isClubCartValid = function(clubCart:Cart):boolean{\n  let totalSpreadQuantity = 0;\n  let totalBagelQuantity = 0;\n\n  clubCart.items.map((cartItem)=>{\n    switch (cartItem.itemData.cat){\n      case 'bagel':\n        totalBagelQuantity+=cartItem.quantity;\n        break;\n      case 'spread':\n        totalSpreadQuantity+=cartItem.quantity;\n        break;\n      default:\n        break;\n    };\n  });\n  return (totalSpreadQuantity===1 && totalBagelQuantity===6);\n}\n\nexport const handlePlaceClubOrder = async function(clubCart:Cart,isClubCartValid:boolean,deliveriesRemaining:number,shipDate?:Date){\n  if (!isClubCartValid){\n    alert('To place your order you must have 6 \"Two Packs\" and 1 \"1/2 LB\" spread in your cart.')\n  }else if(!shipDate){\n    alert('You must select a ship date to place your order.');\n  }else if(deliveriesRemaining<=0){\n    alert('You do not have any deliveries remaining this billing cycle.');\n  }else{\n    //request the cart token\n    const response = await fetch(`${getServerUrlPrefix()}/api/memberships/create-club-checkout-session`,{\n      method: 'POST',\n      headers:{\n        'Content-Type': `application/json`,\n        'Authorization': `Bearer ${localStorage.getItem('loginToken')}`,\n        'cart-token': `Bearer ${localStorage.getItem('clubCartToken')}`\n      },\n      body:JSON.stringify({\n        shipDate: shipDate\n      })\n    });\n    const responseData = await response.json();\n    if (responseData.sessionUrl) window.location.href=responseData.sessionUrl;\n  }\n};"],"names":["Sidebar","lazy","Banner","About","ClubPerks","Hero","StoreItems","CustomOrders","Home","isSignedIn","setIsSignedIn","useState","isSidebarExpanded","setIsSidebarExpanded","cart","setCart","emptyCart","isInitialLoad","useRef","useEffect","current","localStorage","getItem","fetchAndHandleCart","_jsxs","className","children","_jsx","isExpanded","setIsExpanded","onClick","getServerUrlPrefix","getClientUrlPrefix","concat","verifyCartToken","async","isClub","cartTokenKey","response","fetch","method","headers","status","Error","responseData","json","isValid","err","console","log","requestCartToken","body","JSON","stringify","cartToken","verifyLoginToken","setIsAdmin","setUserID","ok","removeItem","isAdmin","userID","handleLogout","getMembershipTier","setMembershipTier","setRemainingDeliveries","setExpirationDate","membershipLevel","remainingDeliveries","Date","expirationDate","toDateString","modifyCart","updatedQuantity","itemID","isRequestPending","setIsRequestPending","selection","isClubCart","undefined","alert","setItem","handleCartItemInputChange","e","setCartQuantity","cartItem","newVal","parseInt","target","value","itemData","_id","getSelectionName","cat","getCartItemSubtotal","quantity","unitPriceInDollars","getItemQuantityFromCart","itemName","items","index","length","name","subtotalInDollars","taxInDollars","totalQuantity","discountAmountInDollars","finalPriceInDollars","desiredShipDate","isGuest","requestApplyMembershipPricingToCart","loginToken","isClubCartValid","clubCart","totalSpreadQuantity","totalBagelQuantity","map","handlePlaceClubOrder","deliveriesRemaining","shipDate","sessionUrl","window","location","href"],"sourceRoot":""}